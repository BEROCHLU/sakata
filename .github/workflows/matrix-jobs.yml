name: matrix-jobs
on:
  workflow_dispatch:

jobs:
  # This job sets up the build environment and generates a cache key for Python dependencies
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.idcache-key.outputs.key }}
    steps:
      - uses: actions/checkout@v4

      # Generate a unique cache key based on the OS and contents of requirements.txt
      - name: Generate cache key for Python dependencies
        id: idcache-key
        run: echo "key=${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}" >> $GITHUB_OUTPUT

  # This job runs tests or builds in parallel using a matrix strategy
  job_matrix:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job: ["main", "sakata"]
    steps:
      - uses: actions/checkout@v4

      # Use the generated cache key to cache Python dependencies
      - name: Use Python cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install Python dependencies if requirements.txt exists
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip list

      # Set up Node.js and cache npm dependencies
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "16"
          cache: "npm"

      # Install Node.js dependencies and system packages required for building
      - name: Install Node.js dependencies
        run: |
          sudo apt-get install -y build-essential libxi-dev libglu1-mesa-dev libglew-dev pkg-config
          npm ci --no-audit
          npm list --depth=0

      # Run npm scripts for cooking and batch processing based on the job matrix
      - name: run npm script
        run: |
          npm run cooking
          npm run ${{ matrix.job }}+batch

      # Archive the log files generated by the batch processing
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.job }}-artifacts
          path: ./result/${{ matrix.job }}-batch.log

  # This job merges all artifacts from the previous jobs and performs additional processing
  merge_artifacts:
    needs: [setup, job_matrix]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Download all artifacts from the previous jobs
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4

      # Confirm the directory structure and move log files to the result directory
      - name: Confirm the directory and move files
        run: ls -R
      - run: mv ./main-artifacts/output1.log ./result/output1.log
      - run: mv ./sakata-artifacts/output2.log ./result/output2.log

      # Reuse the Python cache and install matplotlib for plotting
      - name: Use Python cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ needs.setup.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Install matplotlib for plotting results
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install matplotlib numpy

      # Run a custom npm script to generate plots from the batch logs
      - run: npm run plot-double

      # Archive the final output including logs and plots
      - name: Archive all artifacts
        uses: actions/upload-artifact@v4
        with:
          name: output-artifacts
          path: |
            ./result/output1.log
            ./result/output2.log
            ./result/plot-double.png
