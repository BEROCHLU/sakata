name: parallel-jobs
on:
  workflow_dispatch:

jobs:
  setup-build:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.idcache-key.outputs.key }}
    steps:
      - uses: actions/checkout@v4

      - name: Generate cache key for Python dependencies
        id: idcache-key
        run: echo "key=${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}" >> $GITHUB_OUTPUT

  main_job:
    needs: setup-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Python cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ needs.setup-build.outputs.cache-key }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip list

      - name: Set up Node.js 16
        uses: actions/setup-node@v4
        with:
          node-version: "16"
          cache: "npm"

      - name: Install Node.js dependencies without optional
        run: |
          npm ci --omit=optional --no-audit
          npm list --depth=0

      - name: run npm script
        run: |
          npm run cooking
          npm run mainb

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: main-artifacts
          path: ./result/output1.log

  sakata_job:
    needs: setup-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Python cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ needs.setup-build.outputs.cache-key }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip list

      - name: Set up Node.js 16
        uses: actions/setup-node@v4
        with:
          node-version: "16"
          cache: "npm"

      - name: Install Node.js dependencies
        run: |
          sudo apt-get install -y build-essential libxi-dev libglu1-mesa-dev libglew-dev pkg-config
          npm ci --no-audit
          npm list --depth=0

      - name: run npm script
        run: |
          npm run cooking
          npm run braindeviceb

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sakata-artifacts
          path: ./result/output2.log

  merge_artifacts:
    needs: [setup-build, main_job, sakata_job]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4

      - name: Confirm the directory and move files
        run: ls -R
      - run: mv ./main-artifacts/output1.log ./result/output1.log
      - run: mv ./sakata-artifacts/output2.log ./result/output2.log

      - name: Use Python cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ needs.setup-build.outputs.cache-key }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install matplotlib numpy

      - run: npm run plot-double

      - name: Archive all artifacts
        uses: actions/upload-artifact@v4
        with:
          name: output-artifacts
          path: |
            ./result/output1.log
            ./result/output2.log
            ./result/plot-double.png
